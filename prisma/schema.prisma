// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  playlists Playlist[]
  favorites Favorite[]
  library   UserTrack[]
}

model UserTrack {
  id      String   @id @default(uuid())
  userId  String
  trackId String
  addedAt DateTime @default(now())

  // Relations
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  track Track @relation(fields: [trackId], references: [id], onDelete: Cascade)

  @@unique([userId, trackId])
  @@index([userId]) // Optimisation pour requêtes fréquentes
}

model Track {
  id String @id @default(uuid())

  // Métadonnées du morceau
  title      String
  artist     String
  album      String
  duration   Int // en secondes
  bitrate    Int?
  sampleRate Int?
  coverArt   String?

  // Fichier physique
  filePath String @unique // Chemin vers fichier physique
  fileHash String @unique // Hash du contenu (SHA256 par exemple)
  fileSize BigInt

  createdAt DateTime @default(now())

  // Relations
  playlists PlaylistTrack[]
  favorites Favorite[]
  users     UserTrack[] // Users ayant le morceau dans leur bibliothèque
}

model Playlist {
  id        String          @id @default(uuid())
  name      String
  userId    String
  user      User            @relation(fields: [userId], references: [id])
  tracks    PlaylistTrack[]
  createdAt DateTime        @default(now())
}

model PlaylistTrack {
  playlistId String
  trackId    String
  position   Int
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  track      Track    @relation(fields: [trackId], references: [id])

  @@id([playlistId, trackId])
}

model Favorite {
  userId    String
  trackId   String
  user      User     @relation(fields: [userId], references: [id])
  track     Track    @relation(fields: [trackId], references: [id])
  createdAt DateTime @default(now())

  @@id([userId, trackId])
}
